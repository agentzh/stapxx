#!/usr/bin/env stap++

# Capture ssl session resumption statistics.

global total
global tickets
global resumed
global reencrypted

probe begin {
    printf("Tracing process %d ($^exec_path).\n", target())
    %( "$^arg_time :default()" != ""  %?
    printf("Please wait for $^arg_time seconds...\n")
    %:
    printf("Hit Ctrl-C to end.\n")
    %)
}

probe @pfunc(ngx_ssl_session_ticket_key_callback).return {
    total++;
    # record client session ticket decryption calls
    if ($enc == 0) {
        tickets++;
        if ($return > 0) resumed++;
        if ($return > 1) reencrypted++;
    }
}

%( "$^arg_time" != ""  %?
probe timer.s($^arg_time) {
    exit()
}
%)

probe end {
    printf("Stop tracing NGX OPENSSL ticket key callback\n");
    printf("Total sessions: %d\n", total);
    printf("Total session tickets: %d\n", tickets);
    printf("Total resumed session ticket: %d\n", resumed);
    printf("Total re-encrypted session ticket: %d\n", reencrypted);

    if (total > 0) {
        ratio1 = (tickets * 100) / total;

    } else {
        ratio1 = 0;
    }

    if (tickets > 0) {
        ratio2 = (resumed * 100) / tickets;

    } else {
        ratio2 = 0;
    }
    printf("Session ticket resumption attempts ratio: %d percent\n", ratio1)
    printf("Session ticket resumption success ratio: %d percent\n", ratio2)
    printf("Total session ticket resumption rate: %d percent\n",
           ratio1 * ratio2 / 100)
    exit();
}
